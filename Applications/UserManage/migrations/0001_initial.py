# Generated by Django 4.1.7 on 2023-10-21 10:48

import Applications.UserManage.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=40, validators=[Applications.UserManage.validators.street_name_validator])),
                ('last_name', models.CharField(max_length=50, validators=[Applications.UserManage.validators.street_name_validator])),
                ('email', models.EmailField(max_length=60, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('house_number', models.CharField(max_length=5, validators=[Applications.UserManage.validators.apartment_house_num_validator])),
                ('apartment_number', models.CharField(max_length=5, validators=[Applications.UserManage.validators.apartment_house_num_validator])),
                ('city', models.CharField(max_length=30, validators=[Applications.UserManage.validators.street_name_validator])),
                ('street', models.CharField(max_length=30, validators=[Applications.UserManage.validators.street_name_validator])),
                ('phone_number', models.IntegerField(max_length=9, unique=True)),
                ('zip_code', models.CharField(max_length=6)),
                ('avaiable', models.CharField(choices=[('Dostepny', 'Dostepny'), ('Zajety', 'Zajety'), ('Urlop', 'Urlop'), ('Inne', 'Inne')], default='Dostepny', max_length=8)),
                ('own_car', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('view_user_details', 'Can view user details'), ('view_own_details', 'Can view own user details'), ('update_user_details', 'Can update user details'), ('update_own_user_details', 'Can update own user details'), ('delete_own_account', 'Can delete own account'), ('delete_user_account', 'Can delete user account'), ('create_user_account', 'Can create user account'), ('view_truck_details', 'Can view truck details'), ('update_truck_details', 'Can update truck details'), ('delete_truck_details', 'Can delete truck'), ('create_truck', 'Can delete truck'), ('view_semitrailer_details', 'Can view semitrailer details'), ('update_semitrailer_details', 'Can update semitrailer details'), ('delete_semitrailer_details', 'Can delete semitrailer'), ('create_semitrailer', 'Can create semitrailer'), ('create_receivment', 'Can create receivment')],
            },
        ),
    ]
